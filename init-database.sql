CREATE TABLE IF NOT EXISTS TRANSACAO (
	"id" SERIAL PRIMARY KEY,
	"realizada_em" TIMESTAMPTZ(3) NOT NULL DEFAULT CURRENT_TIMESTAMP(3),
	"tipo" VARCHAR(1) NOT NULL,
	"descricao" VARCHAR(10) NOT NULL,
	"valor" INTEGER NOT NULL,
	"id_cliente" INTEGER NOT NULL
);

CREATE INDEX IF NOT EXISTS "ID_CLIENT_INDEX" ON TRANSACAO ("id_cliente");
CREATE INDEX IF NOT EXISTS "REALIZADA_EM_INDEX" ON TRANSACAO ("realizada_em" DESC);

CREATE TABLE IF NOT EXISTS USUARIO (
	"id_cliente" INTEGER PRIMARY KEY,
	"limite" INTEGER NOT NULL,
	"saldo" INTEGER NOT NULL DEFAULT 0
);

CREATE INDEX IF NOT EXISTS "PK_ID_CLIENT_SALDO_INDEX" ON USUARIO ("id_cliente") INCLUDE ("saldo");

ALTER TABLE TRANSACAO ADD CONSTRAINT "FKEY_TRANSACAO_ID_CLIENT" FOREIGN KEY ("id_cliente") REFERENCES USUARIO("id_cliente");

CREATE OR REPLACE FUNCTION ADD_CREDIT_TRANSACTION(
    ID_CLIENTE SMALLINT, 
    VALOR INTEGER, 
    DESCRICAO VARCHAR(10), 
    OUT SALDO_ATT INT
)
LANGUAGE plpgsql
AS $$
BEGIN
    INSERT INTO TRANSACAO (tipo, descricao, valor, id_cliente) 
    VALUES ('c', DESCRICAO, VALOR, ID_CLIENTE);

    PERFORM pg_advisory_xact_lock(ID_CLIENTE);

    UPDATE USUARIO 
    SET saldo = saldo + VALOR 
    WHERE id_cliente = ID_CLIENTE
    RETURNING saldo INTO SALDO_ATT;
END;
$$;


CREATE OR REPLACE FUNCTION ADD_DEBIT_TRANSACTION(
    ID_CLIENTE SMALLINT, 
    VALOR INTEGER, 
    DESCRICAO VARCHAR(10),
	LIMITE INT,
    OUT SALDO_ATT INT
)
LANGUAGE plpgsql
AS $$
BEGIN
    PERFORM pg_advisory_xact_lock(ID_CLIENTE);

    UPDATE USUARIO 
    SET saldo = saldo - VALOR 
	WHERE id = ID_CLIENTE AND LIMITE + (saldo - VALOR) < 0
    RETURNING saldo INTO SALDO_ATT;

	IF SALDO_ATT IS NULL THEN
        RETURN FALSE;
    END IF;

	INSERT INTO TRANSACAO (tipo, descricao, valor, id_cliente) 
    VALUES ('d', DESCRICAO, VALOR, ID_CLIENTE);
END;
$$;

INSERT INTO USUARIO ("id_cliente", "limite", "saldo") VALUES (1, 100000, 0);
INSERT INTO USUARIO ("id_cliente", "limite", "saldo") VALUES (2, 80000, 0);
INSERT INTO USUARIO ("id_cliente", "limite", "saldo") VALUES (3, 1000000, 0);
INSERT INTO USUARIO ("id_cliente", "limite", "saldo") VALUES (4, 10000000, 0);
INSERT INTO USUARIO ("id_cliente", "limite", "saldo") VALUES (5, 500000, 0);